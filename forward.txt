import sys
n=list(input("Enter the states (excluding start state)  :- ").split())
poss_ip=list(input("Enter the possible inputs in each state :- ").split())
poss_prob={}
for i in n:
    temp={}
    for j in poss_ip:
        x=float(input(f"Enter the probability for {j} in state {i} :- "))
        temp[j]=x
    if sum(temp.values())==1:
        poss_prob[i]=temp
    else:
        print("Invalid Input")
        print("Error")
        sys.exit(0)
    
    
n.insert(0,"S")
tpm={}
for i in n:
    temp1={}
    for j in n:
        val=float(input(f'Enter the probability value of P[{i}][{j}] :- '))
        temp1[j]=val
    if sum(temp1.values())==1:
        tpm[i]=temp1
    else:
        print("Invalid Input")
        print("Error")
        sys.exit(0)
    
print(n)
print(poss_ip)
print(poss_prob)
for i in tpm.keys():
    print(i,':',tpm[i])

sequence=input("Enter the input sequence for which prob value is to be found : ")
res_table={}
t={}
for j in range(1,len(n)):
    t[n[j]]=tpm['S'][n[j]]*poss_prob[n[j]][sequence[0]]
res_table[0]=t

for i in range(1,len(sequence)):
    t={}
    for j in range(1,len(n)):
        val=[]
        for k in range(1,len(n)):
            val.append(((res_table[i-1][n[k]])(tpm[n[k]][n[j]])(poss_prob[n[j]][sequence[i]])))
        t[n[j]]=sum(val)
    res_table[i]=t
    
print(res_table)
 
res_sum=sum(res_table[len(sequence)-1].values())     
print("the probability that sequence S is generated by the system is : ",res_sum)